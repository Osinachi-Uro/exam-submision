#!/usr/bin/env groovy
pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION = "us-east-1"
    }
    stages {
        stage("Create an EKS Cluster") {
            steps {
                script {
                    dir('SampleApp/terraform') {
                        sh "terraform init"
                        sh "terraform apply -auto-approve"
                    }
                }
            }
        }

   
        stage("Install Helm on EKS Cluster") {
            steps {
                script {
                    dir('SampleApp/kube-prometheus') {
                        sh "aws eks update-kubeconfig --name AltschoolExam-eks-app-cluster"
                        sh "apt install curl"
                        sh "curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3"
                        sh "chmod 700 get_helm.sh"
                        sh "apt install helm"
                    }
                }
            }
        }

        
        stage("Deploy Prometheus on EKS Cluster") {
            steps {
                script {
                    dir('SampleApp/kube-prometheus') {
                        sh "terraform init"
                        sh "terraform apply -auto-approve"
                    }
                }
            }
        }

        
        stage("Deploy to EKS") {
            steps {
                script {
                    dir('SampleApp/kubernetes') {
                        sh "aws eks update-kubeconfig --name AltschoolExam-eks-app-cluster"
                        sh "kubectl apply -f mongo-secret.yml"
                        sh "kubectl apply -f mongo-deployment.yml"
                        sh "kubectl apply -f mongo-configmap.yml"
                        sh "kubectl apply -f mongo-express-deployment.yml"
                    }
                }
            }
        }
    }
}
